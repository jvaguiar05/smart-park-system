# Generated by Django 5.2.6 on 2025-09-12 19:12

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="People",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("public_id", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("name", models.CharField(max_length=80)),
                ("email", models.CharField(max_length=255, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "people",
            },
        ),
        migrations.CreateModel(
            name="Roles",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=40, unique=True)),
            ],
            options={
                "db_table": "roles",
            },
        ),
        migrations.CreateModel(
            name="SlotTypes",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=30, unique=True)),
            ],
            options={
                "db_table": "slot_types",
            },
        ),
        migrations.CreateModel(
            name="StoreTypes",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=50, unique=True)),
            ],
            options={
                "db_table": "store_types",
            },
        ),
        migrations.CreateModel(
            name="VehicleTypes",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=30, unique=True)),
            ],
            options={
                "db_table": "vehicle_types",
            },
        ),
        migrations.CreateModel(
            name="Clients",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("public_id", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("name", models.CharField(max_length=120)),
                (
                    "onboarding_status",
                    models.CharField(default="PENDING", max_length=32),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "clients",
                "indexes": [models.Index(fields=["name"], name="ix_clients_name")],
            },
        ),
        migrations.CreateModel(
            name="ApiKeys",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                ("key_id", models.CharField(max_length=64, unique=True)),
                ("hmac_secret_hash", models.TextField()),
                ("enabled", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "client",
                    models.ForeignKey(
                        db_column="client_id",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="api_keys",
                        to="core.clients",
                    ),
                ),
            ],
            options={
                "db_table": "api_keys",
            },
        ),
        migrations.CreateModel(
            name="Establishments",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("public_id", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("name", models.CharField(max_length=120)),
                ("address", models.CharField(blank=True, max_length=255, null=True)),
                ("city", models.CharField(blank=True, max_length=100, null=True)),
                ("state", models.CharField(blank=True, max_length=50, null=True)),
                ("lat", models.FloatField(blank=True, null=True)),
                ("lng", models.FloatField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "client",
                    models.ForeignKey(
                        db_column="client_id",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="establishments",
                        to="core.clients",
                    ),
                ),
                (
                    "store_type",
                    models.ForeignKey(
                        blank=True,
                        db_column="store_type_id",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="establishments",
                        to="core.storetypes",
                    ),
                ),
            ],
            options={
                "db_table": "establishments",
            },
        ),
        migrations.CreateModel(
            name="Lots",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("public_id", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("lot_code", models.CharField(max_length=50)),
                ("name", models.CharField(blank=True, max_length=120, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "client",
                    models.ForeignKey(
                        db_column="client_id",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="lots",
                        to="core.clients",
                    ),
                ),
                (
                    "establishment",
                    models.ForeignKey(
                        db_column="establishment_id",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="lots",
                        to="core.establishments",
                    ),
                ),
            ],
            options={
                "db_table": "lots",
            },
        ),
        migrations.CreateModel(
            name="Cameras",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("public_id", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("camera_code", models.CharField(max_length=50)),
                ("state", models.CharField(default="UNASSIGNED", max_length=16)),
                ("last_seen_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "api_key",
                    models.ForeignKey(
                        db_column="api_key_id",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="cameras",
                        to="core.apikeys",
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        db_column="client_id",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="cameras",
                        to="core.clients",
                    ),
                ),
                (
                    "establishment",
                    models.ForeignKey(
                        blank=True,
                        db_column="establishment_id",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="cameras",
                        to="core.establishments",
                    ),
                ),
                (
                    "lot",
                    models.ForeignKey(
                        blank=True,
                        db_column="lot_id",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="cameras",
                        to="core.lots",
                    ),
                ),
            ],
            options={
                "db_table": "cameras",
            },
        ),
        migrations.CreateModel(
            name="Slots",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("public_id", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("slot_code", models.CharField(max_length=10)),
                ("polygon_json", models.JSONField()),
                ("active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "client",
                    models.ForeignKey(
                        db_column="client_id",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="slots",
                        to="core.clients",
                    ),
                ),
                (
                    "lot",
                    models.ForeignKey(
                        db_column="lot_id",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="slots",
                        to="core.lots",
                    ),
                ),
                (
                    "slot_type",
                    models.ForeignKey(
                        db_column="slot_type_id",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="slots",
                        to="core.slottypes",
                    ),
                ),
            ],
            options={
                "db_table": "slots",
            },
        ),
        migrations.CreateModel(
            name="Users",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("public_id", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("password_hash", models.TextField()),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "person",
                    models.OneToOneField(
                        db_column="person_id",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="user",
                        to="core.people",
                    ),
                ),
            ],
            options={
                "db_table": "users",
            },
        ),
        migrations.CreateModel(
            name="UserRoles",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("assigned_at", models.DateTimeField(auto_now_add=True)),
                (
                    "role",
                    models.ForeignKey(
                        db_column="role_id",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="user_roles",
                        to="core.roles",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        db_column="user_id",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="user_roles",
                        to="core.users",
                    ),
                ),
            ],
            options={
                "db_table": "user_roles",
            },
        ),
        migrations.CreateModel(
            name="RefreshTokens",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("token_hash", models.TextField()),
                ("expires_at", models.DateTimeField()),
                ("revoked_at", models.DateTimeField(blank=True, null=True)),
                ("fingerprint", models.TextField(blank=True, null=True)),
                ("ip", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        db_column="user_id",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="refresh_tokens",
                        to="core.users",
                    ),
                ),
            ],
            options={
                "db_table": "refresh_tokens",
            },
        ),
        migrations.CreateModel(
            name="ClientMembers",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("joined_at", models.DateTimeField(auto_now_add=True)),
                (
                    "client",
                    models.ForeignKey(
                        db_column="client_id",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="client_members",
                        to="core.clients",
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        db_column="role_id",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="client_members",
                        to="core.roles",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        db_column="user_id",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="client_members",
                        to="core.users",
                    ),
                ),
            ],
            options={
                "db_table": "client_members",
            },
        ),
        migrations.CreateModel(
            name="SlotStatusHistory",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("status", models.CharField(max_length=16)),
                (
                    "confidence",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=4, null=True
                    ),
                ),
                ("event_id", models.UUIDField(blank=True, null=True)),
                ("recorded_at", models.DateTimeField(auto_now_add=True)),
                (
                    "slot",
                    models.ForeignKey(
                        db_column="slot_id",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="status_history",
                        to="core.slots",
                    ),
                ),
                (
                    "vehicle_type",
                    models.ForeignKey(
                        blank=True,
                        db_column="vehicle_type_id",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="slot_status_history",
                        to="core.vehicletypes",
                    ),
                ),
            ],
            options={
                "db_table": "slot_status_history",
            },
        ),
        migrations.CreateModel(
            name="SlotStatusEvents",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("event_id", models.UUIDField(unique=True)),
                ("event_type", models.CharField(max_length=50)),
                ("occurred_at", models.DateTimeField()),
                ("sequence", models.BigIntegerField(blank=True, null=True)),
                ("prev_status", models.CharField(blank=True, max_length=16, null=True)),
                ("curr_status", models.CharField(max_length=16)),
                (
                    "confidence",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=4, null=True
                    ),
                ),
                (
                    "source_model",
                    models.CharField(blank=True, max_length=60, null=True),
                ),
                (
                    "source_version",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                ("received_at", models.DateTimeField(auto_now_add=True)),
                (
                    "camera",
                    models.ForeignKey(
                        blank=True,
                        db_column="camera_id",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="slot_status_events",
                        to="core.cameras",
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        db_column="client_id",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="slot_status_events",
                        to="core.clients",
                    ),
                ),
                (
                    "lot",
                    models.ForeignKey(
                        db_column="lot_id",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="slot_status_events",
                        to="core.lots",
                    ),
                ),
                (
                    "slot",
                    models.ForeignKey(
                        db_column="slot_id",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="slot_status_events",
                        to="core.slots",
                    ),
                ),
                (
                    "curr_vehicle",
                    models.ForeignKey(
                        blank=True,
                        db_column="curr_vehicle_id",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="curr_slot_status_events",
                        to="core.vehicletypes",
                    ),
                ),
                (
                    "prev_vehicle",
                    models.ForeignKey(
                        blank=True,
                        db_column="prev_vehicle_id",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="prev_slot_status_events",
                        to="core.vehicletypes",
                    ),
                ),
            ],
            options={
                "db_table": "slot_status_events",
            },
        ),
        migrations.CreateModel(
            name="SlotStatus",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("status", models.CharField(max_length=16)),
                (
                    "confidence",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=4, null=True
                    ),
                ),
                ("changed_at", models.DateTimeField(auto_now_add=True)),
                (
                    "slot",
                    models.ForeignKey(
                        db_column="slot_id",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="current_status",
                        to="core.slots",
                    ),
                ),
                (
                    "vehicle_type",
                    models.ForeignKey(
                        blank=True,
                        db_column="vehicle_type_id",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="slot_statuses",
                        to="core.vehicletypes",
                    ),
                ),
            ],
            options={
                "db_table": "slot_status",
            },
        ),
        migrations.CreateModel(
            name="CameraHeartbeats",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("received_at", models.DateTimeField(auto_now_add=True)),
                ("payload_json", models.JSONField(blank=True, null=True)),
                (
                    "camera",
                    models.ForeignKey(
                        db_column="camera_id",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="heartbeats",
                        to="core.cameras",
                    ),
                ),
            ],
            options={
                "db_table": "camera_heartbeats",
                "indexes": [
                    models.Index(
                        fields=["camera", "received_at"],
                        name="ix_cam_heartbeats_cam_rec_at",
                    )
                ],
            },
        ),
        migrations.AddConstraint(
            model_name="lots",
            constraint=models.UniqueConstraint(
                fields=("client", "lot_code"), name="uq_lots_client_code"
            ),
        ),
        migrations.AddConstraint(
            model_name="cameras",
            constraint=models.UniqueConstraint(
                fields=("client", "camera_code"), name="uq_cameras_client_code"
            ),
        ),
        migrations.AddConstraint(
            model_name="slots",
            constraint=models.UniqueConstraint(
                fields=("lot", "slot_code"), name="uq_slots_lot_code"
            ),
        ),
        migrations.AddIndex(
            model_name="establishments",
            index=models.Index(
                fields=["store_type"], name="ix_establishments_store_type"
            ),
        ),
        migrations.AddConstraint(
            model_name="establishments",
            constraint=models.UniqueConstraint(
                fields=("client", "name"), name="uq_establishments_client_name"
            ),
        ),
        migrations.AddConstraint(
            model_name="userroles",
            constraint=models.UniqueConstraint(
                fields=("user", "role"), name="uq_user_roles_user_role"
            ),
        ),
        migrations.AddIndex(
            model_name="refreshtokens",
            index=models.Index(fields=["user"], name="ix_refresh_tokens_user"),
        ),
        migrations.AddConstraint(
            model_name="clientmembers",
            constraint=models.UniqueConstraint(
                fields=("client", "user"), name="uq_client_members_client_user"
            ),
        ),
        migrations.AddIndex(
            model_name="slotstatushistory",
            index=models.Index(
                fields=["slot", "recorded_at"], name="ix_slot_hist_slot_rec_at"
            ),
        ),
        migrations.AddIndex(
            model_name="slotstatusevents",
            index=models.Index(
                fields=["slot", "occurred_at"], name="ix_slot_sts_events_occ_at"
            ),
        ),
        migrations.AddConstraint(
            model_name="slotstatus",
            constraint=models.UniqueConstraint(
                fields=("slot",), name="uq_slot_status_slot"
            ),
        ),
    ]
